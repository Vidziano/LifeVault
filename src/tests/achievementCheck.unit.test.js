// achievementCheck.unit.test.js ‚Äî —é–Ω—ñ—Ç-—Ç–µ—Å—Ç–∏ –¥–ª—è –ª–æ–≥—ñ–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—è–≥–Ω–µ–Ω—å
import {
    getNewlyCompletedAchievements,
    shouldTriggerAchievement
  } from '../src/achievementCheck.logic';
  
  describe('achievementCheck.logic ‚Äî —é–Ω—ñ—Ç-—Ç–µ—Å—Ç–∏', () => {
    describe('getNewlyCompletedAchievements()', () => {
      const triggered = ['üìì –°—Ç–≤–æ—Ä–∏—Ç–∏ 1 –Ω–æ—Ç–∞—Ç–∫—É'];
  
      test('—Ñ—ñ–ª—å—Ç—Ä—É—î –ª–∏—à–µ –Ω–æ–≤—ñ –≤–∏–∫–æ–Ω–∞–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è', () => {
        const list = [
          { text: 'üìì –°—Ç–≤–æ—Ä–∏—Ç–∏ 1 –Ω–æ—Ç–∞—Ç–∫—É', done: true },
          { text: 'üìì –°—Ç–≤–æ—Ä–∏—Ç–∏ 5 –Ω–æ—Ç–∞—Ç–æ–∫', done: true },
          { text: 'üìÖ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–¥—ñ—é', done: false }
        ];
  
        const result = getNewlyCompletedAchievements(list, triggered);
        expect(result).toHaveLength(1);
        expect(result[0].text).toBe('üìì –°—Ç–≤–æ—Ä–∏—Ç–∏ 5 –Ω–æ—Ç–∞—Ç–æ–∫');
      });
  
      test('–ø–æ–≤–µ—Ä—Ç–∞—î –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤, —è–∫—â–æ –≤—Å–µ –≤–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ', () => {
        const list = [
          { text: 'üìì –°—Ç–≤–æ—Ä–∏—Ç–∏ 1 –Ω–æ—Ç–∞—Ç–∫—É', done: true }
        ];
        expect(getNewlyCompletedAchievements(list, triggered)).toEqual([]);
      });
  
      test('–ø–æ–≤–µ—Ä—Ç–∞—î –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤, —è–∫—â–æ —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π', () => {
        expect(getNewlyCompletedAchievements([], triggered)).toEqual([]);
      });
    });
  
    describe('shouldTriggerAchievement()', () => {
      const triggered = ['üìö –ü—Ä–æ—á–∏—Ç–∞—Ç–∏ 5 –∫–Ω–∏–≥'];
  
      test('true, —è–∫—â–æ done=true —ñ –Ω–µ –≤ triggered', () => {
        const a = { text: 'üìö –ü—Ä–æ—á–∏—Ç–∞—Ç–∏ 10 –∫–Ω–∏–≥', done: true };
        expect(shouldTriggerAchievement(a, triggered)).toBe(true);
      });
  
      test('false, —è–∫—â–æ done=false', () => {
        const a = { text: 'üìö –ü—Ä–æ—á–∏—Ç–∞—Ç–∏ 5 –∫–Ω–∏–≥', done: false };
        expect(shouldTriggerAchievement(a, triggered)).toBe(false);
      });
  
      test('false, —è–∫—â–æ –≤–∂–µ –≤ —Å–ø–∏—Å–∫—É triggered', () => {
        const a = { text: 'üìö –ü—Ä–æ—á–∏—Ç–∞—Ç–∏ 5 –∫–Ω–∏–≥', done: true };
        expect(shouldTriggerAchievement(a, triggered)).toBe(false);
      });
    });
  });
  
  // –ó–∞–ø—É—Å–∫:
  // npm test achievementCheck.unit.test.js
  