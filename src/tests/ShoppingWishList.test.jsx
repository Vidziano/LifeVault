import React from 'react';
import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import ShoppingWishList from '../ShoppingWishList';

beforeEach(() => {
  localStorage.clear();
  jest.clearAllMocks();
});

test('—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ShoppingWishList', () => {
  render(<ShoppingWishList />);
  expect(screen.getByText('üõçÔ∏è –ú—ñ–π –≤—ñ—à–ª—ñ—Å—Ç')).toBeInTheDocument();
});

test('–¥–æ–¥–∞—î –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–æ–∫', () => {
  render(<ShoppingWishList />);

  fireEvent.change(screen.getByPlaceholderText('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É'), {
    target: { value: '–ù–æ—É—Ç–±—É–∫' },
  });
  fireEvent.change(screen.getByPlaceholderText('–¶—ñ–Ω–∞'), {
    target: { value: '1000' },
  });

  fireEvent.click(screen.getByText('‚ûï –î–æ–¥–∞—Ç–∏'));

  expect(screen.getByText('–ù–æ—É—Ç–±—É–∫')).toBeInTheDocument();
  expect(screen.getByText(/üí∏ 1000 ‚Ç¥/)).toBeInTheDocument();
});

test('–ø–æ–∫–∞–∑—É—î –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—ñ', () => {
  render(<ShoppingWishList />);
  fireEvent.change(screen.getByPlaceholderText('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É'), {
    target: { value: '–ù–∞–≤—É—à–Ω–∏–∫–∏' },
  });
  fireEvent.change(screen.getByPlaceholderText('–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä'), {
    target: { value: 'not-a-url' },
  });

  fireEvent.click(screen.getByText('‚ûï –î–æ–¥–∞—Ç–∏'));

  expect(screen.getByText(/‚ùó –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è/)).toBeInTheDocument();
});

test('—Ä–µ–¥–∞–≥—É—î –Ω–∞—è–≤–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç', async () => {
  render(<ShoppingWishList />);

  fireEvent.change(screen.getByPlaceholderText('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É'), {
    target: { value: '–¢–µ–ª–µ—Ñ–æ–Ω' },
  });
  fireEvent.click(screen.getByText('‚ûï –î–æ–¥–∞—Ç–∏'));

  fireEvent.click(screen.getByText('‚úèÔ∏è'));

  fireEvent.change(screen.getByPlaceholderText('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É'), {
    target: { value: '–ù–æ–≤–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω' },
  });
  fireEvent.click(screen.getByText('üíæ –ó–±–µ—Ä–µ–≥—Ç–∏'));

  expect(await screen.findByText('–ù–æ–≤–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω')).toBeInTheDocument();
});

test('–≤–∏–¥–∞–ª—è—î –µ–ª–µ–º–µ–Ω—Ç –∑—ñ —Å–ø–∏—Å–∫—É', async () => {
  render(<ShoppingWishList />);

  fireEvent.change(screen.getByPlaceholderText('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É'), {
    target: { value: '–ì–æ–¥–∏–Ω–Ω–∏–∫' },
  });
  fireEvent.click(screen.getByText('‚ûï –î–æ–¥–∞—Ç–∏'));

  fireEvent.click(screen.getByText('üóëÔ∏è'));

  await waitFor(() =>
    expect(screen.queryByText('–ì–æ–¥–∏–Ω–Ω–∏–∫')).not.toBeInTheDocument()
  );
});

test('–µ–∫—Å–ø–æ—Ä—Ç—É—î —Å–ø–∏—Å–æ–∫ —É JSON —ñ –∫–æ–ø—ñ—é—î —É –±—É—Ñ–µ—Ä', async () => {
  // –ú–æ–∫ localStorage –∑ –æ–¥–Ω–∏–º –∑–∞–ø–∏—Å–æ–º
  localStorage.setItem('shoppingList', JSON.stringify([
    { id: 1, title: '–¢–æ–≤–∞—Ä', price: '100 ‚Ç¥', imageUrl: '', imageData: '', link: '' }
  ]));

  // –ú–æ–∫–∞—î–º–æ clipboard API
  Object.assign(navigator, {
    clipboard: {
      writeText: jest.fn(),
    },
  });

  window.alert = jest.fn(); // –∑–∞–≥–ª—É—à–∫–∞ alert

  render(<ShoppingWishList />);
  fireEvent.click(screen.getByText('üì§ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å'));

  expect(navigator.clipboard.writeText).toHaveBeenCalled();
  expect(window.alert).toHaveBeenCalledWith(expect.stringContaining('JSON —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'));
});

test('—ñ–º–ø–æ—Ä—Ç—É—î —Å–ø–∏—Å–æ–∫ –∑ –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ JSON', () => {
  const json = JSON.stringify([
    { id: 2, title: '–Ü–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä', price: '50 ‚Ç¥', imageUrl: '', imageData: '', link: '' }
  ]);

  window.prompt = jest.fn().mockReturnValue(json);
  render(<ShoppingWishList />);

  fireEvent.click(screen.getByText('üì• –Ü–º–ø–æ—Ä—Ç'));

  expect(screen.getByText('–Ü–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä')).toBeInTheDocument();
});

test('–Ω–µ —ñ–º–ø–æ—Ä—Ç—É—î, —è–∫—â–æ JSON –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π', () => {
  window.prompt = jest.fn().mockReturnValue('{ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π }');
  window.alert = jest.fn();

  render(<ShoppingWishList />);
  fireEvent.click(screen.getByText('üì• –Ü–º–ø–æ—Ä—Ç'));

  expect(window.alert).toHaveBeenCalledWith(expect.stringContaining('–ü–æ–º–∏–ª–∫–∞'));
});
