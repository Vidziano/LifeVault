// WishList.integration.test.js ‚Äî –≤—Å–µ–æ—Ö–æ–ø–ª—é—é—á—ñ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Å—Ç–∏ –¥–ª—è WishList
import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import WishList from '../src/WishList';

const categories = [
  '–ö–Ω–∏–≥–∏',
  '–ü–æ–¥–æ—Ä–æ–∂—ñ',
  '–§—ñ–ª—å–º–∏',
  '–ú—Ä—ñ—ó',
  '–ü–æ–∫—É–ø–∫–∏'
];

describe('WishList ‚Äî –≤—Å–µ–æ—Ö–æ–ø–ª—é—é—á—ñ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Å—Ç–∏', () => {
  test('—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —É—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ', () => {
    render(<WishList />);

    expect(screen.getByText('üíñ –°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å')).toBeInTheDocument();

    categories.forEach((label) => {
      expect(screen.getByText(label)).toBeInTheDocument();
    });
  });

  test('–∫–æ–∂–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è —ñ –º—ñ—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ + –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥', () => {
    render(<WishList />);

    categories.forEach((label) => {
      fireEvent.click(screen.getByText(label));

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
      expect(screen.getByText(label)).toBeInTheDocument();

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
      expect(screen.getByTitle('–ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å')).toBeInTheDocument();

      // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–∑–∞–¥
      fireEvent.click(screen.getByTitle('–ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å'));
      expect(screen.getByText('üíñ –°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å')).toBeInTheDocument();
    });
  });

  test('—É—Å—ñ –ø–ª–∏—Ç–∫–∏ –º—ñ—Å—Ç—è—Ç—å <video> –∞–±–æ <img> —è–∫ –∫–æ–Ω—Ç–µ–Ω—Ç', () => {
    render(<WishList />);

    const tiles = screen.getAllByText((_, element) => {
      return element?.classList.contains('category-tile');
    });

    tiles.forEach((tile) => {
      const media = tile.querySelector('video, img');
      expect(media).toBeTruthy();
    });
  });

  test('–ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ –∫—ñ–ª—å–∫–æ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏', () => {
    render(<WishList />);

    fireEvent.click(screen.getByText('–ö–Ω–∏–≥–∏'));
    expect(screen.getByText('–ö–Ω–∏–≥–∏')).toBeInTheDocument();

    fireEvent.click(screen.getByTitle('–ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å'));
    fireEvent.click(screen.getByText('–ü–æ–¥–æ—Ä–æ–∂—ñ'));
    expect(screen.getByText('–ü–æ–¥–æ—Ä–æ–∂—ñ')).toBeInTheDocument();
  });

  test('–ø–æ–≤—Ç–æ—Ä–Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ç—ñ—î—ó –∂ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ', () => {
    render(<WishList />);

    fireEvent.click(screen.getByText('–§—ñ–ª—å–º–∏'));
    expect(screen.getByText('–§—ñ–ª—å–º–∏')).toBeInTheDocument();
    fireEvent.click(screen.getByTitle('–ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å'));
    fireEvent.click(screen.getByText('–§—ñ–ª—å–º–∏'));
    expect(screen.getByText('–§—ñ–ª—å–º–∏')).toBeInTheDocument();
  });

  test('–Ω–µ–≤–∞–ª—ñ–¥–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –Ω–µ –≤–∏–∫–ª–∏–∫–∞—î –∫—Ä–∞—à (—Å–∏–º—É–ª—è—Ü—ñ—è —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –ª–æ–≥—ñ–∫—É)', () => {
    const { container } = render(<WishList />);
    // –Ü–Ω‚Äô—î–∫—Ü—ñ—è –ø–æ–º–∏–ª–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
    // (—Ü–µ–π edge-case –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ –Ω–µ –≤–∏–Ω–∏–∫–∞—î, –∞–ª–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ—Ä–∏—Å–Ω–∞)
    expect(container.innerHTML).toContain('üíñ –°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å');
  });
});

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ –æ–∫—Ä–µ–º–æ:
// npm test WishList.integration.test.js
